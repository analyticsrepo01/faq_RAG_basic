import {
  __async
} from "./chunk-DJRN6NKF.mjs";
import { getAuth } from "firebase-admin/auth";
import { initializeAppIfNecessary } from "./helpers.js";
function firebaseAuth(policy, config) {
  initializeAppIfNecessary();
  const required = (config == null ? void 0 : config.required) || true;
  return {
    policy(auth, input) {
      return __async(this, null, function* () {
        if (required && !auth) {
          throw new Error("Auth is required");
        }
        return policy(auth, input);
      });
    },
    provider(req, res, next) {
      return __async(this, null, function* () {
        var _a2;
        const token = (_a2 = req.headers["authorization"]) == null ? void 0 : _a2.split(/[Bb]earer /)[1];
        let decoded;
        if (!token) {
          if (required) {
            unauthorized(res);
          } else {
            next();
          }
          return;
        }
        try {
          decoded = yield getAuth().verifyIdToken(token);
        } catch (e) {
          unauthorized(res);
          return;
        }
        req.auth = decoded;
        next();
      });
    }
  };
}
function unauthorized(res) {
  res.status(403);
  res.send("Unauthorized");
  res.end();
}
export {
  firebaseAuth
};
//# sourceMappingURL=auth.mjs.map