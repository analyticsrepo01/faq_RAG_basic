import { TraceStore, TraceData, TraceQuery, TraceQueryResponse, SpanData } from '@genkit-ai/core/tracing';
import { Firestore } from '@google-cloud/firestore';

/**
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Firestore implementation of a trace store.
 */
declare class FirestoreTraceStore implements TraceStore {
    readonly db: Firestore;
    readonly collection: string;
    readonly databaseId: string;
    readonly expireAfterDays: number;
    constructor(params?: {
        collection?: string;
        databaseId?: string;
        projectId?: string;
        expireAfterDays?: number;
    });
    save(traceId: string, traceData: TraceData): Promise<void>;
    load(traceId: string): Promise<TraceData | undefined>;
    list(query?: TraceQuery): Promise<TraceQueryResponse>;
}
/**
 * Batches up spans in the trace by size, trying to make sure each batch does not exceed firestore docs size limit.
 * Will truncate span if it's too big to fit into a batch by itself.
 * @internal
 */
declare function rebatchSpans(traceData: TraceData): Record<string, SpanData>[];

export { FirestoreTraceStore, rebatchSpans };
