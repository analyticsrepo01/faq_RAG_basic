{"version":3,"sources":["../src/functions.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OperationSchema } from '@genkit-ai/core';\nimport { logger } from '@genkit-ai/core/logging';\nimport {\n  defineFlow,\n  Flow,\n  FlowAuthPolicy,\n  FlowWrapper,\n  StepsFunction,\n} from '@genkit-ai/flow';\nimport * as express from 'express';\nimport { getAppCheck } from 'firebase-admin/app-check';\nimport {\n  HttpsFunction,\n  HttpsOptions,\n  onRequest,\n} from 'firebase-functions/v2/https';\nimport * as z from 'zod';\nimport {\n  callHttpsFunction,\n  getLocation,\n  initializeAppIfNecessary,\n} from './helpers.js';\n\nexport type FunctionFlow<\n  I extends z.ZodTypeAny,\n  O extends z.ZodTypeAny,\n  S extends z.ZodTypeAny,\n> = HttpsFunction & FlowWrapper<I, O, S>;\n\nexport interface FunctionFlowAuth<I extends z.ZodTypeAny> {\n  provider: express.RequestHandler;\n  policy: FlowAuthPolicy<I>;\n}\n\ninterface FunctionFlowConfig<\n  I extends z.ZodTypeAny,\n  O extends z.ZodTypeAny,\n  S extends z.ZodTypeAny,\n> {\n  name: string;\n  inputSchema?: I;\n  outputSchema?: O;\n  authPolicy: FunctionFlowAuth<I>;\n  streamSchema?: S;\n  httpsOptions?: HttpsOptions;\n  enforceAppCheck?: boolean;\n  consumeAppCheckToken?: boolean;\n}\n\n/**\n * Creates a flow backed by Cloud Functions for Firebase gen2 HTTPS function.\n */\nexport function onFlow<\n  I extends z.ZodTypeAny,\n  O extends z.ZodTypeAny,\n  S extends z.ZodTypeAny,\n>(\n  config: FunctionFlowConfig<I, O, S>,\n  steps: StepsFunction<I, O, S>\n): FunctionFlow<I, O, S> {\n  const f = defineFlow(\n    {\n      ...config,\n      authPolicy: config.authPolicy.policy,\n      invoker: async (flow, data, streamingCallback) => {\n        const responseJson = await callHttpsFunction(\n          flow.name,\n          await getLocation(),\n          data,\n          streamingCallback\n        );\n\n        const res = JSON.parse(responseJson);\n        if (streamingCallback) {\n          return OperationSchema.parse(res);\n        } else {\n          return {\n            name: '',\n            done: true,\n            result: {\n              response: res,\n            },\n          };\n        }\n      },\n    },\n    steps\n  );\n\n  const wrapped = wrapHttpsFlow(f, config);\n\n  const funcFlow = wrapped as FunctionFlow<I, O, S>;\n  funcFlow.flow = f;\n\n  return funcFlow;\n}\n\nfunction wrapHttpsFlow<\n  I extends z.ZodTypeAny,\n  O extends z.ZodTypeAny,\n  S extends z.ZodTypeAny,\n>(flow: Flow<I, O, S>, config: FunctionFlowConfig<I, O, S>): HttpsFunction {\n  return onRequest(\n    {\n      ...config.httpsOptions,\n      memory: config.httpsOptions?.memory || '512MiB',\n    },\n    async (req, res) => {\n      if (config.enforceAppCheck) {\n        if (\n          !(await appCheckValid(\n            req.headers['x-firebase-appcheck'],\n            !!config.consumeAppCheckToken\n          ))\n        ) {\n          const respBody = {\n            error: {\n              status: 'UNAUTHENTICATED',\n              message: 'Unauthorized',\n            },\n          };\n          logger.logStructured(`Response[/${flow.name}]`, {\n            path: `/${flow.name}`,\n            code: 401,\n            body: respBody,\n          });\n          res.status(401).send(respBody).end();\n          return;\n        }\n      }\n\n      await config.authPolicy.provider(req, res, () =>\n        flow.expressHandler(req, res)\n      );\n    }\n  );\n}\n\nasync function appCheckValid(\n  tok: string | string[] | undefined,\n  consume: boolean\n): Promise<boolean> {\n  if (typeof tok !== 'string') return false;\n  initializeAppIfNecessary();\n  try {\n    const appCheckClaims = await getAppCheck().verifyToken(tok, { consume });\n\n    if (consume && appCheckClaims.alreadyConsumed) return false;\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Indicates that no authorization is in effect.\n *\n * WARNING: If you are using Cloud Functions for Firebase with no IAM policy,\n * this will allow anyone on the internet to execute this flow.\n */\nexport function noAuth(): FunctionFlowAuth<any> {\n  return {\n    provider: (req, res, next) => next(),\n    policy: () => {},\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,kBAAgC;AAChC,qBAAuB;AACvB,kBAMO;AAEP,uBAA4B;AAC5B,mBAIO;AAEP,qBAIO;AA+BA,SAAS,OAKd,QACA,OACuB;AACvB,QAAM,QAAI;AAAA,IACR,iCACK,SADL;AAAA,MAEE,YAAY,OAAO,WAAW;AAAA,MAC9B,SAAS,CAAO,MAAM,MAAM,sBAAsB;AAChD,cAAM,eAAe,UAAM;AAAA,UACzB,KAAK;AAAA,UACL,UAAM,4BAAY;AAAA,UAClB;AAAA,UACA;AAAA,QACF;AAEA,cAAM,MAAM,KAAK,MAAM,YAAY;AACnC,YAAI,mBAAmB;AACrB,iBAAO,4BAAgB,MAAM,GAAG;AAAA,QAClC,OAAO;AACL,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,MAAM;AAAA,YACN,QAAQ;AAAA,cACN,UAAU;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAEA,QAAM,UAAU,cAAc,GAAG,MAAM;AAEvC,QAAM,WAAW;AACjB,WAAS,OAAO;AAEhB,SAAO;AACT;AAEA,SAAS,cAIP,MAAqB,QAAoD;AArH3E;AAsHE,aAAO;AAAA,IACL,iCACK,OAAO,eADZ;AAAA,MAEE,UAAQ,YAAO,iBAAP,mBAAqB,WAAU;AAAA,IACzC;AAAA,IACA,CAAO,KAAK,QAAQ;AAClB,UAAI,OAAO,iBAAiB;AAC1B,YACE,EAAE,MAAM;AAAA,UACN,IAAI,QAAQ,qBAAqB;AAAA,UACjC,CAAC,CAAC,OAAO;AAAA,QACX,IACA;AACA,gBAAM,WAAW;AAAA,YACf,OAAO;AAAA,cACL,QAAQ;AAAA,cACR,SAAS;AAAA,YACX;AAAA,UACF;AACA,gCAAO,cAAc,aAAa,KAAK,IAAI,KAAK;AAAA,YAC9C,MAAM,IAAI,KAAK,IAAI;AAAA,YACnB,MAAM;AAAA,YACN,MAAM;AAAA,UACR,CAAC;AACD,cAAI,OAAO,GAAG,EAAE,KAAK,QAAQ,EAAE,IAAI;AACnC;AAAA,QACF;AAAA,MACF;AAEA,YAAM,OAAO,WAAW;AAAA,QAAS;AAAA,QAAK;AAAA,QAAK,MACzC,KAAK,eAAe,KAAK,GAAG;AAAA,MAC9B;AAAA,IACF;AAAA,EACF;AACF;AAEA,SAAe,cACb,KACA,SACkB;AAAA;AAClB,QAAI,OAAO,QAAQ;AAAU,aAAO;AACpC,iDAAyB;AACzB,QAAI;AACF,YAAM,iBAAiB,UAAM,8BAAY,EAAE,YAAY,KAAK,EAAE,QAAQ,CAAC;AAEvE,UAAI,WAAW,eAAe;AAAiB,eAAO;AACtD,aAAO;AAAA,IACT,SAAS,GAAG;AACV,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAQO,SAAS,SAAgC;AAC9C,SAAO;AAAA,IACL,UAAU,CAAC,KAAK,KAAK,SAAS,KAAK;AAAA,IACnC,QAAQ,MAAM;AAAA,IAAC;AAAA,EACjB;AACF;","names":[]}