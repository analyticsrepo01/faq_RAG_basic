"use strict";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
var functions_exports = {};
__export(functions_exports, {
  noAuth: () => noAuth,
  onFlow: () => onFlow
});
module.exports = __toCommonJS(functions_exports);
var import_core = require("@genkit-ai/core");
var import_logging = require("@genkit-ai/core/logging");
var import_flow = require("@genkit-ai/flow");
var import_app_check = require("firebase-admin/app-check");
var import_https = require("firebase-functions/v2/https");
var import_helpers = require("./helpers.js");
function onFlow(config, steps) {
  const f = (0, import_flow.defineFlow)(
    __spreadProps(__spreadValues({}, config), {
      authPolicy: config.authPolicy.policy,
      invoker: (flow, data, streamingCallback) => __async(this, null, function* () {
        const responseJson = yield (0, import_helpers.callHttpsFunction)(
          flow.name,
          yield (0, import_helpers.getLocation)(),
          data,
          streamingCallback
        );
        const res = JSON.parse(responseJson);
        if (streamingCallback) {
          return import_core.OperationSchema.parse(res);
        } else {
          return {
            name: "",
            done: true,
            result: {
              response: res
            }
          };
        }
      })
    }),
    steps
  );
  const wrapped = wrapHttpsFlow(f, config);
  const funcFlow = wrapped;
  funcFlow.flow = f;
  return funcFlow;
}
function wrapHttpsFlow(flow, config) {
  var _a;
  return (0, import_https.onRequest)(
    __spreadProps(__spreadValues({}, config.httpsOptions), {
      memory: ((_a = config.httpsOptions) == null ? void 0 : _a.memory) || "512MiB"
    }),
    (req, res) => __async(this, null, function* () {
      if (config.enforceAppCheck) {
        if (!(yield appCheckValid(
          req.headers["x-firebase-appcheck"],
          !!config.consumeAppCheckToken
        ))) {
          const respBody = {
            error: {
              status: "UNAUTHENTICATED",
              message: "Unauthorized"
            }
          };
          import_logging.logger.logStructured(`Response[/${flow.name}]`, {
            path: `/${flow.name}`,
            code: 401,
            body: respBody
          });
          res.status(401).send(respBody).end();
          return;
        }
      }
      yield config.authPolicy.provider(
        req,
        res,
        () => flow.expressHandler(req, res)
      );
    })
  );
}
function appCheckValid(tok, consume) {
  return __async(this, null, function* () {
    if (typeof tok !== "string")
      return false;
    (0, import_helpers.initializeAppIfNecessary)();
    try {
      const appCheckClaims = yield (0, import_app_check.getAppCheck)().verifyToken(tok, { consume });
      if (consume && appCheckClaims.alreadyConsumed)
        return false;
      return true;
    } catch (e) {
      return false;
    }
  });
}
function noAuth() {
  return {
    provider: (req, res, next) => next(),
    policy: () => {
    }
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  noAuth,
  onFlow
});
//# sourceMappingURL=functions.js.map