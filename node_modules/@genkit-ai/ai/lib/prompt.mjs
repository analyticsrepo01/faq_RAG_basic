import {
  __async,
  __spreadProps,
  __spreadValues
} from "./chunk-7OAPEGJQ.mjs";
import { defineAction } from "@genkit-ai/core";
import { lookupAction } from "@genkit-ai/core/registry";
function isPrompt(arg) {
  var _a, _b;
  return typeof arg === "function" && ((_b = (_a = arg.__action) == null ? void 0 : _a.metadata) == null ? void 0 : _b.type) === "prompt";
}
function definePrompt({
  name,
  description,
  inputSchema,
  inputJsonSchema,
  metadata
}, fn) {
  const a = defineAction(
    {
      actionType: "prompt",
      name,
      description,
      inputSchema,
      inputJsonSchema,
      metadata: __spreadProps(__spreadValues({}, metadata || { prompt: {} }), { type: "prompt" })
    },
    fn
  );
  return a;
}
function renderPrompt(params) {
  return __async(this, null, function* () {
    let prompt;
    if (typeof params.prompt === "string") {
      prompt = yield lookupAction(`/prompt/${params.prompt}`);
    } else {
      prompt = params.prompt;
    }
    const rendered = yield prompt(params.input);
    return {
      model: params.model,
      config: __spreadValues(__spreadValues({}, rendered.config || {}), params.config),
      history: rendered.messages.slice(0, rendered.messages.length - 1),
      prompt: rendered.messages[rendered.messages.length - 1].content,
      context: params.context
    };
  });
}
export {
  definePrompt,
  isPrompt,
  renderPrompt
};
//# sourceMappingURL=prompt.mjs.map