import { Action, Middleware, StreamingCallback } from '@genkit-ai/core';
import { z } from 'zod';

/**
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

declare const TextPartSchema: z.ZodObject<{
    data: z.ZodOptional<z.ZodUnknown>;
    media: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolRequest: z.ZodOptional<z.ZodNever>;
    toolResponse: z.ZodOptional<z.ZodNever>;
    text: z.ZodString;
}, "strip", z.ZodTypeAny, {
    text: string;
    data?: unknown;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
}, {
    text: string;
    data?: unknown;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
}>;
type TextPart = z.infer<typeof TextPartSchema>;
declare const MediaPartSchema: z.ZodObject<{
    data: z.ZodOptional<z.ZodUnknown>;
    text: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolRequest: z.ZodOptional<z.ZodNever>;
    toolResponse: z.ZodOptional<z.ZodNever>;
    media: z.ZodObject<{
        /** The media content type. Inferred from data uri if not provided. */
        contentType: z.ZodOptional<z.ZodString>;
        /** A `data:` or `https:` uri containing the media content.  */
        url: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        url: string;
        contentType?: string | undefined;
    }, {
        url: string;
        contentType?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    media: {
        url: string;
        contentType?: string | undefined;
    };
    data?: unknown;
    text?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
}, {
    media: {
        url: string;
        contentType?: string | undefined;
    };
    data?: unknown;
    text?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
}>;
type MediaPart = z.infer<typeof MediaPartSchema>;
declare const ToolRequestPartSchema: z.ZodObject<{
    data: z.ZodOptional<z.ZodUnknown>;
    text: z.ZodOptional<z.ZodNever>;
    media: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolResponse: z.ZodOptional<z.ZodNever>;
    toolRequest: z.ZodObject<{
        /** The call id or reference for a specific request. */
        ref: z.ZodOptional<z.ZodString>;
        /** The name of the tool to call. */
        name: z.ZodString;
        /** The input parameters for the tool, usually a JSON object. */
        input: z.ZodOptional<z.ZodUnknown>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        ref?: string | undefined;
        input?: unknown;
    }, {
        name: string;
        ref?: string | undefined;
        input?: unknown;
    }>;
}, "strip", z.ZodTypeAny, {
    toolRequest: {
        name: string;
        ref?: string | undefined;
        input?: unknown;
    };
    data?: unknown;
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolResponse?: undefined;
}, {
    toolRequest: {
        name: string;
        ref?: string | undefined;
        input?: unknown;
    };
    data?: unknown;
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolResponse?: undefined;
}>;
type ToolRequestPart = z.infer<typeof ToolRequestPartSchema>;
declare const ToolResponsePartSchema: z.ZodObject<{
    data: z.ZodOptional<z.ZodUnknown>;
    text: z.ZodOptional<z.ZodNever>;
    media: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolRequest: z.ZodOptional<z.ZodNever>;
    toolResponse: z.ZodObject<{
        /** The call id or reference for a specific request. */
        ref: z.ZodOptional<z.ZodString>;
        /** The name of the tool. */
        name: z.ZodString;
        /** The output data returned from the tool, usually a JSON object. */
        output: z.ZodOptional<z.ZodUnknown>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        ref?: string | undefined;
        output?: unknown;
    }, {
        name: string;
        ref?: string | undefined;
        output?: unknown;
    }>;
}, "strip", z.ZodTypeAny, {
    toolResponse: {
        name: string;
        ref?: string | undefined;
        output?: unknown;
    };
    data?: unknown;
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
}, {
    toolResponse: {
        name: string;
        ref?: string | undefined;
        output?: unknown;
    };
    data?: unknown;
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
}>;
type ToolResponsePart = z.infer<typeof ToolResponsePartSchema>;
declare const DataPartSchema: z.ZodObject<{
    text: z.ZodOptional<z.ZodNever>;
    media: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolRequest: z.ZodOptional<z.ZodNever>;
    toolResponse: z.ZodOptional<z.ZodNever>;
    data: z.ZodUnknown;
}, "strip", z.ZodTypeAny, {
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
    data?: unknown;
}, {
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
    data?: unknown;
}>;
type DataPart = z.infer<typeof DataPartSchema>;
declare const PartSchema: z.ZodUnion<[z.ZodObject<{
    data: z.ZodOptional<z.ZodUnknown>;
    media: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolRequest: z.ZodOptional<z.ZodNever>;
    toolResponse: z.ZodOptional<z.ZodNever>;
    text: z.ZodString;
}, "strip", z.ZodTypeAny, {
    text: string;
    data?: unknown;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
}, {
    text: string;
    data?: unknown;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
}>, z.ZodObject<{
    data: z.ZodOptional<z.ZodUnknown>;
    text: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolRequest: z.ZodOptional<z.ZodNever>;
    toolResponse: z.ZodOptional<z.ZodNever>;
    media: z.ZodObject<{
        /** The media content type. Inferred from data uri if not provided. */
        contentType: z.ZodOptional<z.ZodString>;
        /** A `data:` or `https:` uri containing the media content.  */
        url: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        url: string;
        contentType?: string | undefined;
    }, {
        url: string;
        contentType?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    media: {
        url: string;
        contentType?: string | undefined;
    };
    data?: unknown;
    text?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
}, {
    media: {
        url: string;
        contentType?: string | undefined;
    };
    data?: unknown;
    text?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
}>, z.ZodObject<{
    data: z.ZodOptional<z.ZodUnknown>;
    text: z.ZodOptional<z.ZodNever>;
    media: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolResponse: z.ZodOptional<z.ZodNever>;
    toolRequest: z.ZodObject<{
        /** The call id or reference for a specific request. */
        ref: z.ZodOptional<z.ZodString>;
        /** The name of the tool to call. */
        name: z.ZodString;
        /** The input parameters for the tool, usually a JSON object. */
        input: z.ZodOptional<z.ZodUnknown>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        ref?: string | undefined;
        input?: unknown;
    }, {
        name: string;
        ref?: string | undefined;
        input?: unknown;
    }>;
}, "strip", z.ZodTypeAny, {
    toolRequest: {
        name: string;
        ref?: string | undefined;
        input?: unknown;
    };
    data?: unknown;
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolResponse?: undefined;
}, {
    toolRequest: {
        name: string;
        ref?: string | undefined;
        input?: unknown;
    };
    data?: unknown;
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolResponse?: undefined;
}>, z.ZodObject<{
    data: z.ZodOptional<z.ZodUnknown>;
    text: z.ZodOptional<z.ZodNever>;
    media: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolRequest: z.ZodOptional<z.ZodNever>;
    toolResponse: z.ZodObject<{
        /** The call id or reference for a specific request. */
        ref: z.ZodOptional<z.ZodString>;
        /** The name of the tool. */
        name: z.ZodString;
        /** The output data returned from the tool, usually a JSON object. */
        output: z.ZodOptional<z.ZodUnknown>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        ref?: string | undefined;
        output?: unknown;
    }, {
        name: string;
        ref?: string | undefined;
        output?: unknown;
    }>;
}, "strip", z.ZodTypeAny, {
    toolResponse: {
        name: string;
        ref?: string | undefined;
        output?: unknown;
    };
    data?: unknown;
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
}, {
    toolResponse: {
        name: string;
        ref?: string | undefined;
        output?: unknown;
    };
    data?: unknown;
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
}>, z.ZodObject<{
    text: z.ZodOptional<z.ZodNever>;
    media: z.ZodOptional<z.ZodNever>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    toolRequest: z.ZodOptional<z.ZodNever>;
    toolResponse: z.ZodOptional<z.ZodNever>;
    data: z.ZodUnknown;
}, "strip", z.ZodTypeAny, {
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
    data?: unknown;
}, {
    text?: undefined;
    media?: undefined;
    metadata?: Record<string, unknown> | undefined;
    toolRequest?: undefined;
    toolResponse?: undefined;
    data?: unknown;
}>]>;
type Part = z.infer<typeof PartSchema>;
declare const RoleSchema: z.ZodEnum<["system", "user", "model", "tool"]>;
type Role = z.infer<typeof RoleSchema>;
declare const MessageSchema: z.ZodObject<{
    role: z.ZodEnum<["system", "user", "model", "tool"]>;
    content: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        data: z.ZodOptional<z.ZodUnknown>;
        media: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolRequest: z.ZodOptional<z.ZodNever>;
        toolResponse: z.ZodOptional<z.ZodNever>;
        text: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        text: string;
        data?: unknown;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    }, {
        text: string;
        data?: unknown;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    }>, z.ZodObject<{
        data: z.ZodOptional<z.ZodUnknown>;
        text: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolRequest: z.ZodOptional<z.ZodNever>;
        toolResponse: z.ZodOptional<z.ZodNever>;
        media: z.ZodObject<{
            /** The media content type. Inferred from data uri if not provided. */
            contentType: z.ZodOptional<z.ZodString>;
            /** A `data:` or `https:` uri containing the media content.  */
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            url: string;
            contentType?: string | undefined;
        }, {
            url: string;
            contentType?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        media: {
            url: string;
            contentType?: string | undefined;
        };
        data?: unknown;
        text?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    }, {
        media: {
            url: string;
            contentType?: string | undefined;
        };
        data?: unknown;
        text?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    }>, z.ZodObject<{
        data: z.ZodOptional<z.ZodUnknown>;
        text: z.ZodOptional<z.ZodNever>;
        media: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolResponse: z.ZodOptional<z.ZodNever>;
        toolRequest: z.ZodObject<{
            /** The call id or reference for a specific request. */
            ref: z.ZodOptional<z.ZodString>;
            /** The name of the tool to call. */
            name: z.ZodString;
            /** The input parameters for the tool, usually a JSON object. */
            input: z.ZodOptional<z.ZodUnknown>;
        }, "strip", z.ZodTypeAny, {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        }, {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        }>;
    }, "strip", z.ZodTypeAny, {
        toolRequest: {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolResponse?: undefined;
    }, {
        toolRequest: {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolResponse?: undefined;
    }>, z.ZodObject<{
        data: z.ZodOptional<z.ZodUnknown>;
        text: z.ZodOptional<z.ZodNever>;
        media: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolRequest: z.ZodOptional<z.ZodNever>;
        toolResponse: z.ZodObject<{
            /** The call id or reference for a specific request. */
            ref: z.ZodOptional<z.ZodString>;
            /** The name of the tool. */
            name: z.ZodString;
            /** The output data returned from the tool, usually a JSON object. */
            output: z.ZodOptional<z.ZodUnknown>;
        }, "strip", z.ZodTypeAny, {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        }, {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        }>;
    }, "strip", z.ZodTypeAny, {
        toolResponse: {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
    }, {
        toolResponse: {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
    }>, z.ZodObject<{
        text: z.ZodOptional<z.ZodNever>;
        media: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolRequest: z.ZodOptional<z.ZodNever>;
        toolResponse: z.ZodOptional<z.ZodNever>;
        data: z.ZodUnknown;
    }, "strip", z.ZodTypeAny, {
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
        data?: unknown;
    }, {
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
        data?: unknown;
    }>]>, "many">;
}, "strip", z.ZodTypeAny, {
    content: ({
        text: string;
        data?: unknown;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    } | {
        media: {
            url: string;
            contentType?: string | undefined;
        };
        data?: unknown;
        text?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    } | {
        toolRequest: {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolResponse?: undefined;
    } | {
        toolResponse: {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
    } | {
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
        data?: unknown;
    })[];
    role: "model" | "tool" | "system" | "user";
}, {
    content: ({
        text: string;
        data?: unknown;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    } | {
        media: {
            url: string;
            contentType?: string | undefined;
        };
        data?: unknown;
        text?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    } | {
        toolRequest: {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolResponse?: undefined;
    } | {
        toolResponse: {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
    } | {
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
        data?: unknown;
    })[];
    role: "model" | "tool" | "system" | "user";
}>;
type MessageData = z.infer<typeof MessageSchema>;
declare const ModelInfoSchema: z.ZodObject<{
    /** Acceptable names for this model (e.g. different versions). */
    versions: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    /** Friendly label for this model (e.g. "Google AI - Gemini Pro") */
    label: z.ZodOptional<z.ZodString>;
    /** Supported model capabilities. */
    supports: z.ZodOptional<z.ZodObject<{
        /** Model can process historical messages passed with a prompt. */
        multiturn: z.ZodOptional<z.ZodBoolean>;
        /** Model can process media as part of the prompt (multimodal input). */
        media: z.ZodOptional<z.ZodBoolean>;
        /** Model can perform tool calls. */
        tools: z.ZodOptional<z.ZodBoolean>;
        /** Model can accept messages with role "system". */
        systemRole: z.ZodOptional<z.ZodBoolean>;
        /** Model can output this type of data. */
        output: z.ZodOptional<z.ZodArray<z.ZodEnum<["json", "text", "media"]>, "many">>;
        /** Model can natively support document-based context grounding. */
        context: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        multiturn?: boolean | undefined;
        media?: boolean | undefined;
        tools?: boolean | undefined;
        systemRole?: boolean | undefined;
        output?: ("text" | "media" | "json")[] | undefined;
        context?: boolean | undefined;
    }, {
        multiturn?: boolean | undefined;
        media?: boolean | undefined;
        tools?: boolean | undefined;
        systemRole?: boolean | undefined;
        output?: ("text" | "media" | "json")[] | undefined;
        context?: boolean | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    versions?: string[] | undefined;
    label?: string | undefined;
    supports?: {
        multiturn?: boolean | undefined;
        media?: boolean | undefined;
        tools?: boolean | undefined;
        systemRole?: boolean | undefined;
        output?: ("text" | "media" | "json")[] | undefined;
        context?: boolean | undefined;
    } | undefined;
}, {
    versions?: string[] | undefined;
    label?: string | undefined;
    supports?: {
        multiturn?: boolean | undefined;
        media?: boolean | undefined;
        tools?: boolean | undefined;
        systemRole?: boolean | undefined;
        output?: ("text" | "media" | "json")[] | undefined;
        context?: boolean | undefined;
    } | undefined;
}>;
type ModelInfo = z.infer<typeof ModelInfoSchema>;
declare const ToolDefinitionSchema: z.ZodObject<{
    name: z.ZodString;
    description: z.ZodString;
    inputSchema: z.ZodRecord<z.ZodString, z.ZodAny>;
    outputSchema: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
}, "strip", z.ZodTypeAny, {
    name: string;
    description: string;
    inputSchema: Record<string, any>;
    outputSchema?: Record<string, any> | undefined;
}, {
    name: string;
    description: string;
    inputSchema: Record<string, any>;
    outputSchema?: Record<string, any> | undefined;
}>;
type ToolDefinition = z.infer<typeof ToolDefinitionSchema>;
declare const GenerationCommonConfigSchema: z.ZodObject<{
    /** A specific version of a model family, e.g. `gemini-1.0-pro-001` for the `gemini-1.0-pro` family. */
    version: z.ZodOptional<z.ZodString>;
    temperature: z.ZodOptional<z.ZodNumber>;
    maxOutputTokens: z.ZodOptional<z.ZodNumber>;
    topK: z.ZodOptional<z.ZodNumber>;
    topP: z.ZodOptional<z.ZodNumber>;
    stopSequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    version?: string | undefined;
    temperature?: number | undefined;
    maxOutputTokens?: number | undefined;
    topK?: number | undefined;
    topP?: number | undefined;
    stopSequences?: string[] | undefined;
}, {
    version?: string | undefined;
    temperature?: number | undefined;
    maxOutputTokens?: number | undefined;
    topK?: number | undefined;
    topP?: number | undefined;
    stopSequences?: string[] | undefined;
}>;
declare const OutputConfigSchema: z.ZodObject<{
    format: z.ZodOptional<z.ZodEnum<["json", "text", "media"]>>;
    schema: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
}, "strip", z.ZodTypeAny, {
    format?: "text" | "media" | "json" | undefined;
    schema?: Record<string, any> | undefined;
}, {
    format?: "text" | "media" | "json" | undefined;
    schema?: Record<string, any> | undefined;
}>;
type OutputConfig = z.infer<typeof OutputConfigSchema>;
declare const GenerateRequestSchema: z.ZodObject<{
    messages: z.ZodArray<z.ZodObject<{
        role: z.ZodEnum<["system", "user", "model", "tool"]>;
        content: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            data: z.ZodOptional<z.ZodUnknown>;
            media: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolRequest: z.ZodOptional<z.ZodNever>;
            toolResponse: z.ZodOptional<z.ZodNever>;
            text: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        }, {
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        }>, z.ZodObject<{
            data: z.ZodOptional<z.ZodUnknown>;
            text: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolRequest: z.ZodOptional<z.ZodNever>;
            toolResponse: z.ZodOptional<z.ZodNever>;
            media: z.ZodObject<{
                /** The media content type. Inferred from data uri if not provided. */
                contentType: z.ZodOptional<z.ZodString>;
                /** A `data:` or `https:` uri containing the media content.  */
                url: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                url: string;
                contentType?: string | undefined;
            }, {
                url: string;
                contentType?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        }, {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        }>, z.ZodObject<{
            data: z.ZodOptional<z.ZodUnknown>;
            text: z.ZodOptional<z.ZodNever>;
            media: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolResponse: z.ZodOptional<z.ZodNever>;
            toolRequest: z.ZodObject<{
                /** The call id or reference for a specific request. */
                ref: z.ZodOptional<z.ZodString>;
                /** The name of the tool to call. */
                name: z.ZodString;
                /** The input parameters for the tool, usually a JSON object. */
                input: z.ZodOptional<z.ZodUnknown>;
            }, "strip", z.ZodTypeAny, {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            }, {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            }>;
        }, "strip", z.ZodTypeAny, {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        }, {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        }>, z.ZodObject<{
            data: z.ZodOptional<z.ZodUnknown>;
            text: z.ZodOptional<z.ZodNever>;
            media: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolRequest: z.ZodOptional<z.ZodNever>;
            toolResponse: z.ZodObject<{
                /** The call id or reference for a specific request. */
                ref: z.ZodOptional<z.ZodString>;
                /** The name of the tool. */
                name: z.ZodString;
                /** The output data returned from the tool, usually a JSON object. */
                output: z.ZodOptional<z.ZodUnknown>;
            }, "strip", z.ZodTypeAny, {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            }, {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            }>;
        }, "strip", z.ZodTypeAny, {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        }, {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        }>, z.ZodObject<{
            text: z.ZodOptional<z.ZodNever>;
            media: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolRequest: z.ZodOptional<z.ZodNever>;
            toolResponse: z.ZodOptional<z.ZodNever>;
            data: z.ZodUnknown;
        }, "strip", z.ZodTypeAny, {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        }, {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        }>]>, "many">;
    }, "strip", z.ZodTypeAny, {
        content: ({
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        } | {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        } | {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        })[];
        role: "model" | "tool" | "system" | "user";
    }, {
        content: ({
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        } | {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        } | {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        })[];
        role: "model" | "tool" | "system" | "user";
    }>, "many">;
    config: z.ZodOptional<z.ZodAny>;
    tools: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        description: z.ZodString;
        inputSchema: z.ZodRecord<z.ZodString, z.ZodAny>;
        outputSchema: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        description: string;
        inputSchema: Record<string, any>;
        outputSchema?: Record<string, any> | undefined;
    }, {
        name: string;
        description: string;
        inputSchema: Record<string, any>;
        outputSchema?: Record<string, any> | undefined;
    }>, "many">>;
    output: z.ZodOptional<z.ZodObject<{
        format: z.ZodOptional<z.ZodEnum<["json", "text", "media"]>>;
        schema: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    }, "strip", z.ZodTypeAny, {
        format?: "text" | "media" | "json" | undefined;
        schema?: Record<string, any> | undefined;
    }, {
        format?: "text" | "media" | "json" | undefined;
        schema?: Record<string, any> | undefined;
    }>>;
    context: z.ZodOptional<z.ZodArray<z.ZodObject<{
        content: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            media: z.ZodOptional<z.ZodNever>;
            text: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            text: string;
            media?: undefined;
        }, {
            text: string;
            media?: undefined;
        }>, z.ZodObject<{
            text: z.ZodOptional<z.ZodNever>;
            media: z.ZodObject<{
                contentType: z.ZodOptional<z.ZodString>;
                url: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                url: string;
                contentType?: string | undefined;
            }, {
                url: string;
                contentType?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            text?: undefined;
        }, {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            text?: undefined;
        }>]>, "many">;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    }, "strip", z.ZodTypeAny, {
        content: ({
            text: string;
            media?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            text?: undefined;
        })[];
        metadata?: Record<string, any> | undefined;
    }, {
        content: ({
            text: string;
            media?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            text?: undefined;
        })[];
        metadata?: Record<string, any> | undefined;
    }>, "many">>;
    candidates: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    messages: {
        content: ({
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        } | {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        } | {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        })[];
        role: "model" | "tool" | "system" | "user";
    }[];
    config?: any;
    tools?: {
        name: string;
        description: string;
        inputSchema: Record<string, any>;
        outputSchema?: Record<string, any> | undefined;
    }[] | undefined;
    output?: {
        format?: "text" | "media" | "json" | undefined;
        schema?: Record<string, any> | undefined;
    } | undefined;
    context?: {
        content: ({
            text: string;
            media?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            text?: undefined;
        })[];
        metadata?: Record<string, any> | undefined;
    }[] | undefined;
    candidates?: number | undefined;
}, {
    messages: {
        content: ({
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        } | {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        } | {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        })[];
        role: "model" | "tool" | "system" | "user";
    }[];
    config?: any;
    tools?: {
        name: string;
        description: string;
        inputSchema: Record<string, any>;
        outputSchema?: Record<string, any> | undefined;
    }[] | undefined;
    output?: {
        format?: "text" | "media" | "json" | undefined;
        schema?: Record<string, any> | undefined;
    } | undefined;
    context?: {
        content: ({
            text: string;
            media?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            text?: undefined;
        })[];
        metadata?: Record<string, any> | undefined;
    }[] | undefined;
    candidates?: number | undefined;
}>;
interface GenerateRequest<CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny> extends z.infer<typeof GenerateRequestSchema> {
    config?: z.infer<CustomOptionsSchema>;
}
declare const GenerationUsageSchema: z.ZodObject<{
    inputTokens: z.ZodOptional<z.ZodNumber>;
    outputTokens: z.ZodOptional<z.ZodNumber>;
    totalTokens: z.ZodOptional<z.ZodNumber>;
    inputCharacters: z.ZodOptional<z.ZodNumber>;
    outputCharacters: z.ZodOptional<z.ZodNumber>;
    inputImages: z.ZodOptional<z.ZodNumber>;
    outputImages: z.ZodOptional<z.ZodNumber>;
    custom: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    inputTokens?: number | undefined;
    outputTokens?: number | undefined;
    totalTokens?: number | undefined;
    inputCharacters?: number | undefined;
    outputCharacters?: number | undefined;
    inputImages?: number | undefined;
    outputImages?: number | undefined;
    custom?: Record<string, number> | undefined;
}, {
    inputTokens?: number | undefined;
    outputTokens?: number | undefined;
    totalTokens?: number | undefined;
    inputCharacters?: number | undefined;
    outputCharacters?: number | undefined;
    inputImages?: number | undefined;
    outputImages?: number | undefined;
    custom?: Record<string, number> | undefined;
}>;
type GenerationUsage = z.infer<typeof GenerationUsageSchema>;
declare const CandidateSchema: z.ZodObject<{
    index: z.ZodNumber;
    message: z.ZodObject<{
        role: z.ZodEnum<["system", "user", "model", "tool"]>;
        content: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            data: z.ZodOptional<z.ZodUnknown>;
            media: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolRequest: z.ZodOptional<z.ZodNever>;
            toolResponse: z.ZodOptional<z.ZodNever>;
            text: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        }, {
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        }>, z.ZodObject<{
            data: z.ZodOptional<z.ZodUnknown>;
            text: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolRequest: z.ZodOptional<z.ZodNever>;
            toolResponse: z.ZodOptional<z.ZodNever>;
            media: z.ZodObject<{
                /** The media content type. Inferred from data uri if not provided. */
                contentType: z.ZodOptional<z.ZodString>;
                /** A `data:` or `https:` uri containing the media content.  */
                url: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                url: string;
                contentType?: string | undefined;
            }, {
                url: string;
                contentType?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        }, {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        }>, z.ZodObject<{
            data: z.ZodOptional<z.ZodUnknown>;
            text: z.ZodOptional<z.ZodNever>;
            media: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolResponse: z.ZodOptional<z.ZodNever>;
            toolRequest: z.ZodObject<{
                /** The call id or reference for a specific request. */
                ref: z.ZodOptional<z.ZodString>;
                /** The name of the tool to call. */
                name: z.ZodString;
                /** The input parameters for the tool, usually a JSON object. */
                input: z.ZodOptional<z.ZodUnknown>;
            }, "strip", z.ZodTypeAny, {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            }, {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            }>;
        }, "strip", z.ZodTypeAny, {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        }, {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        }>, z.ZodObject<{
            data: z.ZodOptional<z.ZodUnknown>;
            text: z.ZodOptional<z.ZodNever>;
            media: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolRequest: z.ZodOptional<z.ZodNever>;
            toolResponse: z.ZodObject<{
                /** The call id or reference for a specific request. */
                ref: z.ZodOptional<z.ZodString>;
                /** The name of the tool. */
                name: z.ZodString;
                /** The output data returned from the tool, usually a JSON object. */
                output: z.ZodOptional<z.ZodUnknown>;
            }, "strip", z.ZodTypeAny, {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            }, {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            }>;
        }, "strip", z.ZodTypeAny, {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        }, {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        }>, z.ZodObject<{
            text: z.ZodOptional<z.ZodNever>;
            media: z.ZodOptional<z.ZodNever>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            toolRequest: z.ZodOptional<z.ZodNever>;
            toolResponse: z.ZodOptional<z.ZodNever>;
            data: z.ZodUnknown;
        }, "strip", z.ZodTypeAny, {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        }, {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        }>]>, "many">;
    }, "strip", z.ZodTypeAny, {
        content: ({
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        } | {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        } | {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        })[];
        role: "model" | "tool" | "system" | "user";
    }, {
        content: ({
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        } | {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        } | {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        })[];
        role: "model" | "tool" | "system" | "user";
    }>;
    usage: z.ZodOptional<z.ZodObject<{
        inputTokens: z.ZodOptional<z.ZodNumber>;
        outputTokens: z.ZodOptional<z.ZodNumber>;
        totalTokens: z.ZodOptional<z.ZodNumber>;
        inputCharacters: z.ZodOptional<z.ZodNumber>;
        outputCharacters: z.ZodOptional<z.ZodNumber>;
        inputImages: z.ZodOptional<z.ZodNumber>;
        outputImages: z.ZodOptional<z.ZodNumber>;
        custom: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        inputTokens?: number | undefined;
        outputTokens?: number | undefined;
        totalTokens?: number | undefined;
        inputCharacters?: number | undefined;
        outputCharacters?: number | undefined;
        inputImages?: number | undefined;
        outputImages?: number | undefined;
        custom?: Record<string, number> | undefined;
    }, {
        inputTokens?: number | undefined;
        outputTokens?: number | undefined;
        totalTokens?: number | undefined;
        inputCharacters?: number | undefined;
        outputCharacters?: number | undefined;
        inputImages?: number | undefined;
        outputImages?: number | undefined;
        custom?: Record<string, number> | undefined;
    }>>;
    finishReason: z.ZodEnum<["stop", "length", "blocked", "other", "unknown"]>;
    finishMessage: z.ZodOptional<z.ZodString>;
    custom: z.ZodUnknown;
}, "strip", z.ZodTypeAny, {
    message: {
        content: ({
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        } | {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        } | {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        })[];
        role: "model" | "tool" | "system" | "user";
    };
    index: number;
    finishReason: "length" | "unknown" | "stop" | "blocked" | "other";
    usage?: {
        inputTokens?: number | undefined;
        outputTokens?: number | undefined;
        totalTokens?: number | undefined;
        inputCharacters?: number | undefined;
        outputCharacters?: number | undefined;
        inputImages?: number | undefined;
        outputImages?: number | undefined;
        custom?: Record<string, number> | undefined;
    } | undefined;
    finishMessage?: string | undefined;
    custom?: unknown;
}, {
    message: {
        content: ({
            text: string;
            data?: unknown;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            media: {
                url: string;
                contentType?: string | undefined;
            };
            data?: unknown;
            text?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
        } | {
            toolRequest: {
                name: string;
                ref?: string | undefined;
                input?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolResponse?: undefined;
        } | {
            toolResponse: {
                name: string;
                ref?: string | undefined;
                output?: unknown;
            };
            data?: unknown;
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
        } | {
            text?: undefined;
            media?: undefined;
            metadata?: Record<string, unknown> | undefined;
            toolRequest?: undefined;
            toolResponse?: undefined;
            data?: unknown;
        })[];
        role: "model" | "tool" | "system" | "user";
    };
    index: number;
    finishReason: "length" | "unknown" | "stop" | "blocked" | "other";
    usage?: {
        inputTokens?: number | undefined;
        outputTokens?: number | undefined;
        totalTokens?: number | undefined;
        inputCharacters?: number | undefined;
        outputCharacters?: number | undefined;
        inputImages?: number | undefined;
        outputImages?: number | undefined;
        custom?: Record<string, number> | undefined;
    } | undefined;
    finishMessage?: string | undefined;
    custom?: unknown;
}>;
type CandidateData = z.infer<typeof CandidateSchema>;
declare const CandidateErrorSchema: z.ZodObject<{
    index: z.ZodNumber;
    code: z.ZodEnum<["blocked", "other", "unknown"]>;
    message: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    code: "unknown" | "blocked" | "other";
    index: number;
    message?: string | undefined;
}, {
    code: "unknown" | "blocked" | "other";
    index: number;
    message?: string | undefined;
}>;
type CandidateError = z.infer<typeof CandidateErrorSchema>;
declare const GenerateResponseSchema: z.ZodObject<{
    candidates: z.ZodArray<z.ZodObject<{
        index: z.ZodNumber;
        message: z.ZodObject<{
            role: z.ZodEnum<["system", "user", "model", "tool"]>;
            content: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                data: z.ZodOptional<z.ZodUnknown>;
                media: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolRequest: z.ZodOptional<z.ZodNever>;
                toolResponse: z.ZodOptional<z.ZodNever>;
                text: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            }, {
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            }>, z.ZodObject<{
                data: z.ZodOptional<z.ZodUnknown>;
                text: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolRequest: z.ZodOptional<z.ZodNever>;
                toolResponse: z.ZodOptional<z.ZodNever>;
                media: z.ZodObject<{
                    /** The media content type. Inferred from data uri if not provided. */
                    contentType: z.ZodOptional<z.ZodString>;
                    /** A `data:` or `https:` uri containing the media content.  */
                    url: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    url: string;
                    contentType?: string | undefined;
                }, {
                    url: string;
                    contentType?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            }, {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            }>, z.ZodObject<{
                data: z.ZodOptional<z.ZodUnknown>;
                text: z.ZodOptional<z.ZodNever>;
                media: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolResponse: z.ZodOptional<z.ZodNever>;
                toolRequest: z.ZodObject<{
                    /** The call id or reference for a specific request. */
                    ref: z.ZodOptional<z.ZodString>;
                    /** The name of the tool to call. */
                    name: z.ZodString;
                    /** The input parameters for the tool, usually a JSON object. */
                    input: z.ZodOptional<z.ZodUnknown>;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                }, {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                }>;
            }, "strip", z.ZodTypeAny, {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            }, {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            }>, z.ZodObject<{
                data: z.ZodOptional<z.ZodUnknown>;
                text: z.ZodOptional<z.ZodNever>;
                media: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolRequest: z.ZodOptional<z.ZodNever>;
                toolResponse: z.ZodObject<{
                    /** The call id or reference for a specific request. */
                    ref: z.ZodOptional<z.ZodString>;
                    /** The name of the tool. */
                    name: z.ZodString;
                    /** The output data returned from the tool, usually a JSON object. */
                    output: z.ZodOptional<z.ZodUnknown>;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                }, {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                }>;
            }, "strip", z.ZodTypeAny, {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            }, {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            }>, z.ZodObject<{
                text: z.ZodOptional<z.ZodNever>;
                media: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolRequest: z.ZodOptional<z.ZodNever>;
                toolResponse: z.ZodOptional<z.ZodNever>;
                data: z.ZodUnknown;
            }, "strip", z.ZodTypeAny, {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            }, {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            }>]>, "many">;
        }, "strip", z.ZodTypeAny, {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        }, {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        }>;
        usage: z.ZodOptional<z.ZodObject<{
            inputTokens: z.ZodOptional<z.ZodNumber>;
            outputTokens: z.ZodOptional<z.ZodNumber>;
            totalTokens: z.ZodOptional<z.ZodNumber>;
            inputCharacters: z.ZodOptional<z.ZodNumber>;
            outputCharacters: z.ZodOptional<z.ZodNumber>;
            inputImages: z.ZodOptional<z.ZodNumber>;
            outputImages: z.ZodOptional<z.ZodNumber>;
            custom: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            inputTokens?: number | undefined;
            outputTokens?: number | undefined;
            totalTokens?: number | undefined;
            inputCharacters?: number | undefined;
            outputCharacters?: number | undefined;
            inputImages?: number | undefined;
            outputImages?: number | undefined;
            custom?: Record<string, number> | undefined;
        }, {
            inputTokens?: number | undefined;
            outputTokens?: number | undefined;
            totalTokens?: number | undefined;
            inputCharacters?: number | undefined;
            outputCharacters?: number | undefined;
            inputImages?: number | undefined;
            outputImages?: number | undefined;
            custom?: Record<string, number> | undefined;
        }>>;
        finishReason: z.ZodEnum<["stop", "length", "blocked", "other", "unknown"]>;
        finishMessage: z.ZodOptional<z.ZodString>;
        custom: z.ZodUnknown;
    }, "strip", z.ZodTypeAny, {
        message: {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        };
        index: number;
        finishReason: "length" | "unknown" | "stop" | "blocked" | "other";
        usage?: {
            inputTokens?: number | undefined;
            outputTokens?: number | undefined;
            totalTokens?: number | undefined;
            inputCharacters?: number | undefined;
            outputCharacters?: number | undefined;
            inputImages?: number | undefined;
            outputImages?: number | undefined;
            custom?: Record<string, number> | undefined;
        } | undefined;
        finishMessage?: string | undefined;
        custom?: unknown;
    }, {
        message: {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        };
        index: number;
        finishReason: "length" | "unknown" | "stop" | "blocked" | "other";
        usage?: {
            inputTokens?: number | undefined;
            outputTokens?: number | undefined;
            totalTokens?: number | undefined;
            inputCharacters?: number | undefined;
            outputCharacters?: number | undefined;
            inputImages?: number | undefined;
            outputImages?: number | undefined;
            custom?: Record<string, number> | undefined;
        } | undefined;
        finishMessage?: string | undefined;
        custom?: unknown;
    }>, "many">;
    latencyMs: z.ZodOptional<z.ZodNumber>;
    usage: z.ZodOptional<z.ZodObject<{
        inputTokens: z.ZodOptional<z.ZodNumber>;
        outputTokens: z.ZodOptional<z.ZodNumber>;
        totalTokens: z.ZodOptional<z.ZodNumber>;
        inputCharacters: z.ZodOptional<z.ZodNumber>;
        outputCharacters: z.ZodOptional<z.ZodNumber>;
        inputImages: z.ZodOptional<z.ZodNumber>;
        outputImages: z.ZodOptional<z.ZodNumber>;
        custom: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        inputTokens?: number | undefined;
        outputTokens?: number | undefined;
        totalTokens?: number | undefined;
        inputCharacters?: number | undefined;
        outputCharacters?: number | undefined;
        inputImages?: number | undefined;
        outputImages?: number | undefined;
        custom?: Record<string, number> | undefined;
    }, {
        inputTokens?: number | undefined;
        outputTokens?: number | undefined;
        totalTokens?: number | undefined;
        inputCharacters?: number | undefined;
        outputCharacters?: number | undefined;
        inputImages?: number | undefined;
        outputImages?: number | undefined;
        custom?: Record<string, number> | undefined;
    }>>;
    custom: z.ZodUnknown;
    request: z.ZodOptional<z.ZodObject<{
        messages: z.ZodArray<z.ZodObject<{
            role: z.ZodEnum<["system", "user", "model", "tool"]>;
            content: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                data: z.ZodOptional<z.ZodUnknown>;
                media: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolRequest: z.ZodOptional<z.ZodNever>;
                toolResponse: z.ZodOptional<z.ZodNever>;
                text: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            }, {
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            }>, z.ZodObject<{
                data: z.ZodOptional<z.ZodUnknown>;
                text: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolRequest: z.ZodOptional<z.ZodNever>;
                toolResponse: z.ZodOptional<z.ZodNever>;
                media: z.ZodObject<{
                    /** The media content type. Inferred from data uri if not provided. */
                    contentType: z.ZodOptional<z.ZodString>;
                    /** A `data:` or `https:` uri containing the media content.  */
                    url: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    url: string;
                    contentType?: string | undefined;
                }, {
                    url: string;
                    contentType?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            }, {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            }>, z.ZodObject<{
                data: z.ZodOptional<z.ZodUnknown>;
                text: z.ZodOptional<z.ZodNever>;
                media: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolResponse: z.ZodOptional<z.ZodNever>;
                toolRequest: z.ZodObject<{
                    /** The call id or reference for a specific request. */
                    ref: z.ZodOptional<z.ZodString>;
                    /** The name of the tool to call. */
                    name: z.ZodString;
                    /** The input parameters for the tool, usually a JSON object. */
                    input: z.ZodOptional<z.ZodUnknown>;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                }, {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                }>;
            }, "strip", z.ZodTypeAny, {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            }, {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            }>, z.ZodObject<{
                data: z.ZodOptional<z.ZodUnknown>;
                text: z.ZodOptional<z.ZodNever>;
                media: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolRequest: z.ZodOptional<z.ZodNever>;
                toolResponse: z.ZodObject<{
                    /** The call id or reference for a specific request. */
                    ref: z.ZodOptional<z.ZodString>;
                    /** The name of the tool. */
                    name: z.ZodString;
                    /** The output data returned from the tool, usually a JSON object. */
                    output: z.ZodOptional<z.ZodUnknown>;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                }, {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                }>;
            }, "strip", z.ZodTypeAny, {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            }, {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            }>, z.ZodObject<{
                text: z.ZodOptional<z.ZodNever>;
                media: z.ZodOptional<z.ZodNever>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                toolRequest: z.ZodOptional<z.ZodNever>;
                toolResponse: z.ZodOptional<z.ZodNever>;
                data: z.ZodUnknown;
            }, "strip", z.ZodTypeAny, {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            }, {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            }>]>, "many">;
        }, "strip", z.ZodTypeAny, {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        }, {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        }>, "many">;
        config: z.ZodOptional<z.ZodAny>;
        tools: z.ZodOptional<z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            description: z.ZodString;
            inputSchema: z.ZodRecord<z.ZodString, z.ZodAny>;
            outputSchema: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        }, "strip", z.ZodTypeAny, {
            name: string;
            description: string;
            inputSchema: Record<string, any>;
            outputSchema?: Record<string, any> | undefined;
        }, {
            name: string;
            description: string;
            inputSchema: Record<string, any>;
            outputSchema?: Record<string, any> | undefined;
        }>, "many">>;
        output: z.ZodOptional<z.ZodObject<{
            format: z.ZodOptional<z.ZodEnum<["json", "text", "media"]>>;
            schema: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        }, "strip", z.ZodTypeAny, {
            format?: "text" | "media" | "json" | undefined;
            schema?: Record<string, any> | undefined;
        }, {
            format?: "text" | "media" | "json" | undefined;
            schema?: Record<string, any> | undefined;
        }>>;
        context: z.ZodOptional<z.ZodArray<z.ZodObject<{
            content: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                media: z.ZodOptional<z.ZodNever>;
                text: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                text: string;
                media?: undefined;
            }, {
                text: string;
                media?: undefined;
            }>, z.ZodObject<{
                text: z.ZodOptional<z.ZodNever>;
                media: z.ZodObject<{
                    contentType: z.ZodOptional<z.ZodString>;
                    url: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    url: string;
                    contentType?: string | undefined;
                }, {
                    url: string;
                    contentType?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                text?: undefined;
            }, {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                text?: undefined;
            }>]>, "many">;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        }, "strip", z.ZodTypeAny, {
            content: ({
                text: string;
                media?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                text?: undefined;
            })[];
            metadata?: Record<string, any> | undefined;
        }, {
            content: ({
                text: string;
                media?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                text?: undefined;
            })[];
            metadata?: Record<string, any> | undefined;
        }>, "many">>;
        candidates: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        messages: {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        }[];
        config?: any;
        tools?: {
            name: string;
            description: string;
            inputSchema: Record<string, any>;
            outputSchema?: Record<string, any> | undefined;
        }[] | undefined;
        output?: {
            format?: "text" | "media" | "json" | undefined;
            schema?: Record<string, any> | undefined;
        } | undefined;
        context?: {
            content: ({
                text: string;
                media?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                text?: undefined;
            })[];
            metadata?: Record<string, any> | undefined;
        }[] | undefined;
        candidates?: number | undefined;
    }, {
        messages: {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        }[];
        config?: any;
        tools?: {
            name: string;
            description: string;
            inputSchema: Record<string, any>;
            outputSchema?: Record<string, any> | undefined;
        }[] | undefined;
        output?: {
            format?: "text" | "media" | "json" | undefined;
            schema?: Record<string, any> | undefined;
        } | undefined;
        context?: {
            content: ({
                text: string;
                media?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                text?: undefined;
            })[];
            metadata?: Record<string, any> | undefined;
        }[] | undefined;
        candidates?: number | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    candidates: {
        message: {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        };
        index: number;
        finishReason: "length" | "unknown" | "stop" | "blocked" | "other";
        usage?: {
            inputTokens?: number | undefined;
            outputTokens?: number | undefined;
            totalTokens?: number | undefined;
            inputCharacters?: number | undefined;
            outputCharacters?: number | undefined;
            inputImages?: number | undefined;
            outputImages?: number | undefined;
            custom?: Record<string, number> | undefined;
        } | undefined;
        finishMessage?: string | undefined;
        custom?: unknown;
    }[];
    latencyMs?: number | undefined;
    usage?: {
        inputTokens?: number | undefined;
        outputTokens?: number | undefined;
        totalTokens?: number | undefined;
        inputCharacters?: number | undefined;
        outputCharacters?: number | undefined;
        inputImages?: number | undefined;
        outputImages?: number | undefined;
        custom?: Record<string, number> | undefined;
    } | undefined;
    custom?: unknown;
    request?: {
        messages: {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        }[];
        config?: any;
        tools?: {
            name: string;
            description: string;
            inputSchema: Record<string, any>;
            outputSchema?: Record<string, any> | undefined;
        }[] | undefined;
        output?: {
            format?: "text" | "media" | "json" | undefined;
            schema?: Record<string, any> | undefined;
        } | undefined;
        context?: {
            content: ({
                text: string;
                media?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                text?: undefined;
            })[];
            metadata?: Record<string, any> | undefined;
        }[] | undefined;
        candidates?: number | undefined;
    } | undefined;
}, {
    candidates: {
        message: {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        };
        index: number;
        finishReason: "length" | "unknown" | "stop" | "blocked" | "other";
        usage?: {
            inputTokens?: number | undefined;
            outputTokens?: number | undefined;
            totalTokens?: number | undefined;
            inputCharacters?: number | undefined;
            outputCharacters?: number | undefined;
            inputImages?: number | undefined;
            outputImages?: number | undefined;
            custom?: Record<string, number> | undefined;
        } | undefined;
        finishMessage?: string | undefined;
        custom?: unknown;
    }[];
    latencyMs?: number | undefined;
    usage?: {
        inputTokens?: number | undefined;
        outputTokens?: number | undefined;
        totalTokens?: number | undefined;
        inputCharacters?: number | undefined;
        outputCharacters?: number | undefined;
        inputImages?: number | undefined;
        outputImages?: number | undefined;
        custom?: Record<string, number> | undefined;
    } | undefined;
    custom?: unknown;
    request?: {
        messages: {
            content: ({
                text: string;
                data?: unknown;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                data?: unknown;
                text?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
            } | {
                toolRequest: {
                    name: string;
                    ref?: string | undefined;
                    input?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolResponse?: undefined;
            } | {
                toolResponse: {
                    name: string;
                    ref?: string | undefined;
                    output?: unknown;
                };
                data?: unknown;
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
            } | {
                text?: undefined;
                media?: undefined;
                metadata?: Record<string, unknown> | undefined;
                toolRequest?: undefined;
                toolResponse?: undefined;
                data?: unknown;
            })[];
            role: "model" | "tool" | "system" | "user";
        }[];
        config?: any;
        tools?: {
            name: string;
            description: string;
            inputSchema: Record<string, any>;
            outputSchema?: Record<string, any> | undefined;
        }[] | undefined;
        output?: {
            format?: "text" | "media" | "json" | undefined;
            schema?: Record<string, any> | undefined;
        } | undefined;
        context?: {
            content: ({
                text: string;
                media?: undefined;
            } | {
                media: {
                    url: string;
                    contentType?: string | undefined;
                };
                text?: undefined;
            })[];
            metadata?: Record<string, any> | undefined;
        }[] | undefined;
        candidates?: number | undefined;
    } | undefined;
}>;
type GenerateResponseData = z.infer<typeof GenerateResponseSchema>;
declare const GenerateResponseChunkSchema: z.ZodObject<{
    /** The index of the candidate this chunk belongs to. */
    index: z.ZodNumber;
    /** The chunk of content to stream right now. */
    content: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        data: z.ZodOptional<z.ZodUnknown>;
        media: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolRequest: z.ZodOptional<z.ZodNever>;
        toolResponse: z.ZodOptional<z.ZodNever>;
        text: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        text: string;
        data?: unknown;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    }, {
        text: string;
        data?: unknown;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    }>, z.ZodObject<{
        data: z.ZodOptional<z.ZodUnknown>;
        text: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolRequest: z.ZodOptional<z.ZodNever>;
        toolResponse: z.ZodOptional<z.ZodNever>;
        media: z.ZodObject<{
            /** The media content type. Inferred from data uri if not provided. */
            contentType: z.ZodOptional<z.ZodString>;
            /** A `data:` or `https:` uri containing the media content.  */
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            url: string;
            contentType?: string | undefined;
        }, {
            url: string;
            contentType?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        media: {
            url: string;
            contentType?: string | undefined;
        };
        data?: unknown;
        text?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    }, {
        media: {
            url: string;
            contentType?: string | undefined;
        };
        data?: unknown;
        text?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    }>, z.ZodObject<{
        data: z.ZodOptional<z.ZodUnknown>;
        text: z.ZodOptional<z.ZodNever>;
        media: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolResponse: z.ZodOptional<z.ZodNever>;
        toolRequest: z.ZodObject<{
            /** The call id or reference for a specific request. */
            ref: z.ZodOptional<z.ZodString>;
            /** The name of the tool to call. */
            name: z.ZodString;
            /** The input parameters for the tool, usually a JSON object. */
            input: z.ZodOptional<z.ZodUnknown>;
        }, "strip", z.ZodTypeAny, {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        }, {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        }>;
    }, "strip", z.ZodTypeAny, {
        toolRequest: {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolResponse?: undefined;
    }, {
        toolRequest: {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolResponse?: undefined;
    }>, z.ZodObject<{
        data: z.ZodOptional<z.ZodUnknown>;
        text: z.ZodOptional<z.ZodNever>;
        media: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolRequest: z.ZodOptional<z.ZodNever>;
        toolResponse: z.ZodObject<{
            /** The call id or reference for a specific request. */
            ref: z.ZodOptional<z.ZodString>;
            /** The name of the tool. */
            name: z.ZodString;
            /** The output data returned from the tool, usually a JSON object. */
            output: z.ZodOptional<z.ZodUnknown>;
        }, "strip", z.ZodTypeAny, {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        }, {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        }>;
    }, "strip", z.ZodTypeAny, {
        toolResponse: {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
    }, {
        toolResponse: {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
    }>, z.ZodObject<{
        text: z.ZodOptional<z.ZodNever>;
        media: z.ZodOptional<z.ZodNever>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        toolRequest: z.ZodOptional<z.ZodNever>;
        toolResponse: z.ZodOptional<z.ZodNever>;
        data: z.ZodUnknown;
    }, "strip", z.ZodTypeAny, {
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
        data?: unknown;
    }, {
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
        data?: unknown;
    }>]>, "many">;
    /** Model-specific extra information attached to this chunk. */
    custom: z.ZodOptional<z.ZodUnknown>;
}, "strip", z.ZodTypeAny, {
    content: ({
        text: string;
        data?: unknown;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    } | {
        media: {
            url: string;
            contentType?: string | undefined;
        };
        data?: unknown;
        text?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    } | {
        toolRequest: {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolResponse?: undefined;
    } | {
        toolResponse: {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
    } | {
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
        data?: unknown;
    })[];
    index: number;
    custom?: unknown;
}, {
    content: ({
        text: string;
        data?: unknown;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    } | {
        media: {
            url: string;
            contentType?: string | undefined;
        };
        data?: unknown;
        text?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
    } | {
        toolRequest: {
            name: string;
            ref?: string | undefined;
            input?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolResponse?: undefined;
    } | {
        toolResponse: {
            name: string;
            ref?: string | undefined;
            output?: unknown;
        };
        data?: unknown;
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
    } | {
        text?: undefined;
        media?: undefined;
        metadata?: Record<string, unknown> | undefined;
        toolRequest?: undefined;
        toolResponse?: undefined;
        data?: unknown;
    })[];
    index: number;
    custom?: unknown;
}>;
type GenerateResponseChunkData = z.infer<typeof GenerateResponseChunkSchema>;
type ModelAction<CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny> = Action<typeof GenerateRequestSchema, typeof GenerateResponseSchema, {
    model: ModelInfo;
}> & {
    __configSchema: CustomOptionsSchema;
};
type ModelMiddleware = Middleware<z.infer<typeof GenerateRequestSchema>, z.infer<typeof GenerateResponseSchema>>;
/**
 * Defines a new model and adds it to the registry.
 */
declare function defineModel<CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny>(options: {
    name: string;
    /** Known version names for this model, e.g. `gemini-1.0-pro-001`. */
    versions?: string[];
    /** Capabilities this model supports. */
    supports?: ModelInfo['supports'];
    /** Custom options schema for this model. */
    configSchema?: CustomOptionsSchema;
    /** Descriptive name for this model e.g. 'Google AI - Gemini Pro'. */
    label?: string;
    use?: ModelMiddleware[];
}, runner: (request: GenerateRequest<CustomOptionsSchema>, streamingCallback?: StreamingCallback<GenerateResponseChunkData>) => Promise<GenerateResponseData>): ModelAction<CustomOptionsSchema>;
interface ModelReference<CustomOptions extends z.ZodTypeAny> {
    name: string;
    configSchema?: CustomOptions;
    info?: ModelInfo;
    version?: string;
}
/**
 *
 */
declare function modelRef<CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny>(options: ModelReference<CustomOptionsSchema>): ModelReference<CustomOptionsSchema>;
/**
 * Calculates basic usage statistics from the given model inputs and outputs.
 */
declare function getBasicUsageStats(input: MessageData[], candidates: CandidateData[]): GenerationUsage;
type ModelArgument<CustomOptions extends z.ZodTypeAny = typeof GenerationCommonConfigSchema> = ModelAction<CustomOptions> | ModelReference<CustomOptions> | string;

export { type CandidateData, type CandidateError, CandidateErrorSchema, CandidateSchema, type DataPart, DataPartSchema, type GenerateRequest, GenerateRequestSchema, type GenerateResponseChunkData, GenerateResponseChunkSchema, type GenerateResponseData, GenerateResponseSchema, GenerationCommonConfigSchema, type GenerationUsage, GenerationUsageSchema, type MediaPart, MediaPartSchema, type MessageData, MessageSchema, type ModelAction, type ModelArgument, type ModelInfo, ModelInfoSchema, type ModelMiddleware, type ModelReference, type OutputConfig, type Part, PartSchema, type Role, RoleSchema, type TextPart, TextPartSchema, type ToolDefinition, ToolDefinitionSchema, type ToolRequestPart, ToolRequestPartSchema, type ToolResponsePart, ToolResponsePartSchema, defineModel, getBasicUsageStats, modelRef };
